/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val,List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
    
    public List<Integer> preorder(Node root) {
          if (root == null) {
                return new LinkedList<>();
            }

            List<Integer> list = new ArrayList<>();
            LinkedList<Node> rootQueue = new LinkedList();

            rootQueue.add(root);
            while (rootQueue.peek() != null) {
                Node newNode = rootQueue.pop();
                list.add(newNode.val);
                for (int i = newNode.children.size() - 1; i >= 0; i--) {
                    rootQueue.push(newNode.children.get(i));
                }
            }

            return list;
    }
}
